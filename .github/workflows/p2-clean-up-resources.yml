name: '2. Clean up resources'

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    env:
      TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION }}
      TF_WORKSPACE: ${{ vars.TF_WORKSPACE }}
      TF_VAR_aws_region: ${{ vars.AWS_REGION }}
      TF_VAR_domain_name: ${{ vars.DOMAIN_NAME }}
      TF_VAR_email: ${{ vars.EMAIL }}
      TF_VAR_deployer_ssh_public_key: ${{ secrets.EC2_PUBLIC_KEY }}
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_cloudflare_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
    
    defaults:
      run:
        shell: bash

    steps:

    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Destroy the resources created by Terraform
    - name: Terraform Destroy
      run: terraform destroy --auto-approve
